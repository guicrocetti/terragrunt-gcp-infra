name: "Terragrunt GitHub Actions"

on:
  pull_request:
    paths:
      - "infra/**"
      - "!infra/_envcommon/**"
      - "!infra/example/**"
    branches: [main, test, dev]
  pull_request_target:
    paths:
      - "infra/**"
      - "!infra/_envcommon/**"
      - "!infra/example/**"
    types: [closed]
    branches: [main, test, dev]
  workflow_dispatch:

env:
  tg_version: "0.71.2"
  tf_version: "1.10.3"
  working_dir: "infra"

permissions:
  id-token: write
  contents: read

jobs:
  determine_environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set_env.outputs.environment }}
    steps:
      - id: set_env
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            BRANCH="${{ github.ref_name }}"
          else
            BRANCH="${{ github.base_ref }}"
          fi

          if [[ $BRANCH == "main" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
          elif [[ $BRANCH == "test" ]]; then
            echo "environment=test" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi

  checks:
    needs: determine_environment
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: "hclfmt --terragrunt-check --terragrunt-diff"

  plan:
    needs: [determine_environment, checks]
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: ${{ needs.determine_environment.outputs.environment }}
    env:
      TF_VAR_cloudamqp_apikey: ${{ secrets.CLOUDAMQP_APIKEY }}
      TF_VAR_scylla_token: ${{ secrets.SCYLLA_TOKEN }}
      TF_VAR_github_modules_url: ${{ vars.MODULES_URL }}
      TF_VAR_ARGOCD_GITHUB_TOKEN: ${{ secrets.ARGOCD_GITHUB_TOKEN }}
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - id: auth
        name: Authenticate with Google Cloud
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "${{ env.WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.SERVICE_ACCOUNT }}"
          project_id: "${{ vars.PROJECT_ID }}"
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: Use gcloud CLI
        run: gcloud info
      - name: Configure Git Token for Private Modules
        run: |
          git config --global url."https://${{ secrets.PERSONAL_GITHUB_TOKEN }}@github.com".insteadOf "https://github.com"
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.tf_version }}
      - name: Setup Terragrunt
        uses: eLco/setup-terragrunt@v1.0.3
        with:
          terragrunt_version: ${{ env.tg_version }}
      - name: Plan ${{ vars.PROJECT_ID }} ENV=${{ needs.determine_environment.outputs.environment }}
        run: |
          terragrunt run-all plan --terragrunt-working-dir ${{ env.working_dir }} --terragrunt-strict-include --terragrunt-include-dir "projects/*/*/*-${{ needs.determine_environment.outputs.environment }}/**"

  deploy:
    needs: [determine_environment, checks]
    if: github.event_name == 'pull_request_target' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: ${{ needs.determine_environment.outputs.environment }}
    concurrency:
      group: ${{ needs.determine_environment.outputs.environment }}
      cancel-in-progress: false
    env:
      TF_VAR_cloudamqp_apikey: ${{ secrets.CLOUDAMQP_APIKEY }}
      TF_VAR_scylla_token: ${{ secrets.SCYLLA_TOKEN }}
      TF_VAR_github_modules_url: ${{ vars.MODULES_URL }}
      TF_VAR_ARGOCD_GITHUB_TOKEN: ${{ secrets.ARGOCD_GITHUB_TOKEN }}
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - id: auth
        name: Authenticate with Google Cloud
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "${{ env.WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.SERVICE_ACCOUNT }}"
          project_id: "${{ vars.PROJECT_ID }}"
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: Use gcloud CLI
        run: gcloud info
      - name: Configure Git Token for Private Modules
        run: |
          git config --global url."https://${{ secrets.PERSONAL_GITHUB_TOKEN }}@github.com".insteadOf "https://github.com"
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.tf_version }}
      - name: Setup Terragrunt
        uses: eLco/setup-terragrunt@v1.0.3
        with:
          terragrunt_version: ${{ env.tg_version }}
      - name: Apply ${{ vars.PROJECT_ID }} ENV=${{ needs.determine_environment.outputs.environment }}
        run: |
          terragrunt --terragrunt-non-interactive run-all apply -auto-approve --terragrunt-working-dir ${{ env.working_dir }} --terragrunt-strict-include --terragrunt-include-dir "projects/*/*/*-${{ needs.determine_environment.outputs.environment }}/**"
