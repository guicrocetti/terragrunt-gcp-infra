name: "Terragrunt Infrastructure Deployment"

on:
  pull_request:
    paths:
      - 'clusters/**'
      - '!clusters/_envcommon/**'
      - '!clusters/example/**'
    branches: [ main, test, dev ]
  workflow_dispatch:
    inputs:
      action_type:
        type: choice
        description: Action to perform
        options:
          - plan
          - apply
          - destroy
        required: true
      environment:
        type: choice
        description: Target environment
        options:
          - dev
          - test
          - prod
        required: true

env:
  TF_VERSION: "1.9.7"
  TERRAGRUNT_VERSION: "0.67.16"
  WORKING_DIR: "clusters"
  ACTIONS_STEP_DEBUG: true

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  determine_environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set_env.outputs.environment }}
    steps:
      - id: set_env
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.base_ref }}" == "main" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
          elif [[ "${{ github.base_ref }}" == "test" ]]; then
            echo "environment=test" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi

  detect_changes:
    needs: [determine_environment]
    runs-on: ubuntu-latest
    environment: ${{ needs.determine_environment.outputs.environment }}
    outputs:
      modules_to_process: ${{ steps.detect_modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
      - name: Detect Changed Modules
        id: detect_modules
        uses: guicrocetti/terragrunt-argocd-actions@main
        with:
          working_dir: ${{ env.WORKING_DIR }}
          project_id: ${{ vars.PROJECT_ID }}
          environment: ${{ needs.determine_environment.outputs.environment }}

  plan:
    needs: [determine_environment, detect_changes]
    if: github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action_type == 'plan')
    runs-on: ubuntu-latest
    environment: ${{ needs.determine_environment.outputs.environment }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          project_id: ${{ vars.PROJECT_ID }}

      - name: Setup Terragrunt
        uses: eLco/setup-terragrunt@v1.0.3
        with:
          terragrunt_version: ${{ env.TERRAGRUNT_VERSION }}
          github_token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Terragrunt Plan
        run: |
          terragrunt run-all plan \
          --terragrunt-working-dir ${{ env.WORKING_DIR }}/${{ vars.PROJECT_ID }} \
          --terragrunt-include-dir "${{ needs.detect_changes.outputs.modules_to_process }}"

  apply:
    needs: [determine_environment, detect_changes, plan]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action_type == 'apply'
    runs-on: ubuntu-latest
    environment: ${{ needs.determine_environment.outputs.environment }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          project_id: ${{ vars.PROJECT_ID }}

      - name: Setup Terragrunt
        uses: eLco/setup-terragrunt@v1.0.3
        with:
          terragrunt_version: ${{ env.TERRAGRUNT_VERSION }}
          github_token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Terragrunt Apply
        run: |
          terragrunt run-all apply -auto-approve \
          --terragrunt-working-dir ${{ env.WORKING_DIR }}/${{ vars.PROJECT_ID }} \
          --terragrunt-include-dir "${{ needs.detect_changes.outputs.modules_to_process }}"

  destroy:
    needs: [determine_environment, detect_changes]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action_type == 'destroy'
    runs-on: ubuntu-latest
    environment: ${{ needs.determine_environment.outputs.environment }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Terragrunt Destroy
        run: |
          terragrunt run-all destroy -auto-approve \
          --terragrunt-working-dir ${{ env.WORKING_DIR }}/${{ vars.PROJECT_ID }} \
          --terragrunt-include-dir "${{ needs.detect_changes.outputs.modules_to_process }}"
